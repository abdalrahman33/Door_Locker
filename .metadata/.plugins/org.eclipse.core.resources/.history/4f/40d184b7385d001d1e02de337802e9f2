/*
 * timer1.h
 *
 *  Created on: Nov 5, 2022
 *      Author: Omar Eltoutongy
 */

#ifndef TIMER_H_
#define TIMER_H_

#include "std_types.h"


#define TIMER1


#ifdef TIMER1
/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/

#define PWM_T1A_ENABLE_PORT_ID  PORTD_ID
#define PWM_T1A_ENABLE_PIN_ID   PIN5_ID

#define PWM_T1B_ENABLE_PORT_ID  PORTD_ID
#define PWM_T1B_ENABLE_PIN_ID   PIN4_ID

/*******************************************************************************
 *                         Types Declaration                                   *
 *******************************************************************************/

typedef enum {
	NO_CLK_T1,PS_1_T1,PS_8_T1,PS_64_T1,PS_256_T1,PS_1024_T1,EXT_CLK_FALLING_T1,EXT_CLK_RISING_T1
}Timer1_Prescaler;

typedef enum {
	NORM_T1,PWM_PH_8_T1,PWM_PH_9_T1,PWM_PH_10_T1,CTC_OCR_T1,FAST_PWM_8_T1,FAST_PWM_9_T1,FAST_PWM_10_T1,
	PWM_PH_FR_ICR_T1,PWM_PH_FR_OCR_T1,PWM_PH_ICR_T1,PWM_PH_OCR_T1,CTC_ICR_T1,FAST_PWM_ICR_T1=14,FAST_PWM_OCR_T1
}Timer1_Mode;

typedef enum {
	NONE,TIMER1A,TIMER1B
}Timer1_Index;

typedef enum {
	NORMAL_T1,TOGGLE_T1,CLEAR_T1,SET_T1
}Timer1_Comp_Match;

typedef struct {
 uint16 initial_value;
 uint16 compare_value; // it will be used in compare mode only.
 Timer1_Prescaler prescaler;
 Timer1_Mode mode;
 Timer1_Index index; //choose Timer1A or Timer1B (extra parameter)
 Timer1_Comp_Match comp_match; //decide compare match output mode (extra parameter)
} Timer1_ConfigType;

/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description :
 * Functional responsible for Initialization of Timer 1 by:
 * 1. Setup Timer Mode
 * 2. Setup Prescaler
 * 3. Setup the initial value
 * 4. Setup compare value if required
 */
void Timer1_init(const Timer1_ConfigType * Config_Ptr);


/*
 * Description :
 * Functional responsible for Deinitialization of Timer 1 by clearing all registers
 */
void Timer1_deInit(void);

/*
 * Description: Function to set the Call Back function address.
 */
void Timer1_setCallBack(void(*a_ptr)(void));

/*
 * Description: Adjust PWM compare value if input is percentage
 */
void Timer1_pwmAdjust(uint16 duty_cycle);
#endif

#endif /* TIMER_H_ */
